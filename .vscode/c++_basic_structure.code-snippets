{
	// Place your C++ workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"structure for C++": {
		"prefix": "im",
		"scope": "C++",
		"body": [
			"#include <iostream>",
			"",
			"using namespace std;",
			"",
			"int main()",
			"{",
			"\t$1",
			"",
			"",
			"",
			"\tcout << endl << endl;",
			"\treturn 0;",
			"}"
		],
		"description": "Basic C++ program structure"
	},
	"todo": {
		"prefix": "to",
		"body": "TODO: ",
		"description": "For the To-Do tasks highlight"
	},
	"Add feature": {
		"prefix": "add",
		"body": "Add feature - ",
		"description": "Too lazy to type the whole phrase"
	},
	"cout": {
		"prefix": "cout",
		"scope": "C++,cpp",
		"body": "cout << \"$1\";",
		"description": "Output function in C++"
	},
	"cin": {
		"prefix": "cin",
		"scope": "C++,cpp",
		"body": "cin >> $1;",
		"description": "Input function in C++"
	}
}